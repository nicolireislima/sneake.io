//Play Board √© a Tela ou Tabuleiro
/* Cointainer onde a cobra e a comida ser√£o renderizadas */
const playBoard = document.querySelector(".play-board");
//Pontua√ß√£o do Jogador
const scoreElement = document.querySelector(".score");
//Recorde (maior pontua√ß√£o)
const highScoreElement = document.querySelector(".high-score")
//Controle de movimento
/* Seleciona elementos <i> Icones Bot√µes para Devices Mobiles */
const controls = document.querySelectorAll("controls i");

//Cadastro de Variaveis

/* Variavel Boleana que indica se o jogo terminou */
let gameOver = false;
// Variavel para armazenar as coordenadas X e Y da Comida
let foodX, foodY;
//Armazena as coordenadas X e Y da cabe√ßa da cobra(posi√ß√£o inicial de 5)
let snakeX = 5, snakeY = 5;
/*variavel para armazenar a velocidade nas dire√ß√µes X e Y, inicialmente em 0*/
let velocityX = 0, velocityY = 0;
// uma Array para armazenar as coordenadas de cada segmento do corpo, primeiro elemento √© a cabe√ßa
let snakeBody = [];
// variavel para armazenar o ID do intervalo wue ser√° usado para atualizar o jogo em um determinado ritmo
let setIntervalId;
//Uma variavel para manter o controle da pontua√ß√£o atual do jogador
let score = 0;



// Obtenha a pontua√ß√£o alta do armazenamento local
/* Tenta recuperar o  valor associado √† chave "high-score" do armazenamento local do navegador */ 
let highScore = localStorage.getItem("high-score") || 0;
/* Se o localStorage retornar NULL (caso ele n√£o exista) a variavel highScore sera definida como 0 */

//Posi√ß√£o aleatoria entre 1 e 30 para a comida
/* Gera Coordenadas aleat√≥rias para a nova posi√ß√£o da comida */
const updateFoodPosition = () => {
    // Math.random() = retorna um numero de ponto futuante pseudoaleatorio entre 0 e 1
    // * 30: Multiplica o numero aleatorio por 30 para obter um valor entre 0 e quase 30 para obter um valor entre 0 e quase 30
    // Math.floor(): Arredonda o resultado para o n√∫mero inteiro mais proximo (entre 1 e 29)
    // + 1: Adiciona 1 para garantir que as coordenadas da comidaestejam entre 1 e 30.
    foodX = Math.floor(Math.random() * 30) + 1;
    foodY = Math.floor(Math.random() * 30) + 1;
}

//Fun√ß√£o para lidar com o Fim do Jogo
/* Fun√ß√£o handleGameOver = quando a cobra colide consigo mesma ou com as paredes do tabuleiro */

const handleGameOver = () => {
    clearInterval(setIntervalId);
    alert("Game Over! üòñ Press Ok para iniciar novamente... ");
    location.roload();
}

